@inherits LayoutComponentBase
@inject ThemeService ThemeService

<MudThemeProvider @bind-IsDarkMode="@ThemeService.IsDarkMode" Theme="HealthEHubTheme" />
<MudDialogProvider FullWidth="true" MaxWidth="MaxWidth.ExtraSmall" CloseButton="true" DisableBackdropClick="true" NoHeader="true" Position="DialogPosition.Center" CloseOnEscapeKey="true" />
<MudSnackbarProvider />


<MudLayout Class="d-flex flex-column" Style="min-height: 100%;">
    <Header />
    <MudContainer MaxWidth="MaxWidth.Large" Class="flex-grow-1 main-content-container">
        <MudGrid Class="mud-height-full">
            @Body
        </MudGrid>
    </MudContainer>
    <Footer />
    <MudScrollToTop>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" Class="mb-16" />
    </MudScrollToTop>
</MudLayout>

@code {
    private bool _isDarkMode;

    MudTheme HealthEHubTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Background = "#F3F6FC",
                TextPrimary = "#070C12",
                Primary = "#143971",
                Secondary = "#8EA3C2",
                Tertiary = "#d6e0f5",
                Dark = "#F3F6FC",
                BackgroundGrey = "#e6e9f0",
            },
            PaletteDark = new PaletteDark()
            {
                Background = "#263238",
                TextPrimary = "#EDF2F8",
                Primary = "#8EB3EB",
                Secondary = "#3D5171",
                Tertiary = "#0a1429",
                Dark = "#263238",
            },
        };

    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += StateHasChanged;
        base.OnInitialized();
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= StateHasChanged;
    }
}
